/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VaaSenderBase,
  VaaSenderBaseInterface,
} from "../../WormholeRelayerSDK.sol/VaaSenderBase";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_wormholeRelayer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenBridge",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wormhole",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "tokenBridge",
    outputs: [
      {
        internalType: "contract ITokenBridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wormhole",
    outputs: [
      {
        internalType: "contract IWormhole",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wormholeRelayer",
    outputs: [
      {
        internalType: "contract IWormholeRelayer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b506040516101dc3803806101dc83398101604081905261002f91610068565b6001600160a01b0392831660805290821660a0521660c0526100ab565b80516001600160a01b038116811461006357600080fd5b919050565b60008060006060848603121561007d57600080fd5b6100868461004c565b92506100946020850161004c565b91506100a26040850161004c565b90509250925092565b60805160a05160c0516101056100d7600039600060450152600060870152600060ad01526101056000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c806384acd1bb146041578063c6328a46146083578063da25b7251460a9575b600080fd5b60677f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b60677f000000000000000000000000000000000000000000000000000000000000000081565b60677f00000000000000000000000000000000000000000000000000000000000000008156fea264697066735822122035f26b80f185fc7f843298b7a5d95e4d91e0867abb71597459f20c0cdf51617c64736f6c63430008130033";

type VaaSenderBaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaaSenderBaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VaaSenderBase__factory extends ContractFactory {
  constructor(...args: VaaSenderBaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _wormholeRelayer: string,
    _tokenBridge: string,
    _wormhole: string,
    overrides?: Overrides & { from?: string }
  ): Promise<VaaSenderBase> {
    return super.deploy(
      _wormholeRelayer,
      _tokenBridge,
      _wormhole,
      overrides || {}
    ) as Promise<VaaSenderBase>;
  }
  override getDeployTransaction(
    _wormholeRelayer: string,
    _tokenBridge: string,
    _wormhole: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _wormholeRelayer,
      _tokenBridge,
      _wormhole,
      overrides || {}
    );
  }
  override attach(address: string): VaaSenderBase {
    return super.attach(address) as VaaSenderBase;
  }
  override connect(signer: Signer): VaaSenderBase__factory {
    return super.connect(signer) as VaaSenderBase__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaaSenderBaseInterface {
    return new utils.Interface(_abi) as VaaSenderBaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VaaSenderBase {
    return new Contract(address, _abi, signerOrProvider) as VaaSenderBase;
  }
}
