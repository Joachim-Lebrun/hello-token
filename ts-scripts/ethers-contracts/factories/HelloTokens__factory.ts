/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { HelloTokens, HelloTokensInterface } from "../HelloTokens";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_wormholeRelayer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenBridge",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wormhole",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "NotAnEvmAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "getLiquiditiesProvidedHistory",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "senderChain",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct LiquidityProvided[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "liquidityProvidedHistory",
    outputs: [
      {
        internalType: "uint16",
        name: "senderChain",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "targetChain",
        type: "uint16",
      },
    ],
    name: "quoteRemoteLP",
    outputs: [
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "additionalVaas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint16",
        name: "sourceChain",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "receiveWormholeMessages",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "targetChain",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "sendRemoteLP",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenBridge",
    outputs: [
      {
        internalType: "contract ITokenBridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wormhole",
    outputs: [
      {
        internalType: "contract IWormhole",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wormholeRelayer",
    outputs: [
      {
        internalType: "contract IWormholeRelayer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162001b5038038062001b5083398101604081905262000034916200006f565b6001600160a01b0392831660805290821660a0521660c052620000b9565b80516001600160a01b03811681146200006a57600080fd5b919050565b6000806000606084860312156200008557600080fd5b620000908462000052565b9250620000a06020850162000052565b9150620000b06040850162000052565b90509250925092565b60805160a05160c0516119e962000167600039600081816101580152818161027f0152818161045b015281816108ce01528181610b0401528181610c500152610d410152600081816101a40152818161032e015281816103c10152818161050a0152818161059d0152818161081e0152818161089f01528181610a5401528181610ad501528181610ce30152610dd40152600081816101d8015281816106770152610e6801526119e96000f3fe60806040526004361061007b5760003560e01c806384acd1bb1161004e57806384acd1bb14610146578063c6328a4614610192578063da25b725146101c6578063df50b522146101fa57600080fd5b80631bac053a14610080578063529dca32146100e15780635a70e221146100f65780636a4e54b514610124575b600080fd5b34801561008c57600080fd5b506100a061009b3660046110d7565b61020d565b6040805161ffff90961686526001600160a01b03948516602087015292841692850192909252919091166060830152608082015260a0015b60405180910390f35b6100f46100ef366004611249565b610263565b005b34801561010257600080fd5b5061011661011136600461133f565b61064b565b6040519081526020016100d8565b34801561013057600080fd5b506101396106f0565b6040516100d89190611363565b34801561015257600080fd5b5061017a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100d8565b34801561019e57600080fd5b5061017a7f000000000000000000000000000000000000000000000000000000000000000081565b3480156101d257600080fd5b5061017a7f000000000000000000000000000000000000000000000000000000000000000081565b6100f46102083660046113fa565b61078f565b6000818154811061021d57600080fd5b6000918252602090912060049091020180546001820154600283015460039093015461ffff83169450620100009092046001600160a01b03908116939181169291169085565b6000858060200190518101906102799190611462565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9e11893876000815181106102bf576102bf61147f565b60200260200101516040518263ffffffff1660e01b81526004016102e391906114e5565b600060405180830381865afa158015610300573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103289190810190611639565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632b5113758360e001516040518263ffffffff1660e01b815260040161037c91906114e5565b60e060405180830381865afa158015610399573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bd919061175e565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c6878519886000815181106104015761040161147f565b60200260200101516040518263ffffffff1660e01b815260040161042591906114e5565b600060405180830381600087803b15801561043f57600080fd5b505af1158015610453573d6000803e3d6000fd5b5050505060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9e118938960018151811061049b5761049b61147f565b60200260200101516040518263ffffffff1660e01b81526004016104bf91906114e5565b600060405180830381865afa1580156104dc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105049190810190611639565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632b5113758360e001516040518263ffffffff1660e01b815260040161055891906114e5565b60e060405180830381865afa158015610575573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610599919061175e565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c68785198a6001815181106105dd576105dd61147f565b60200260200101516040518263ffffffff1660e01b815260040161060191906114e5565b600060405180830381600087803b15801561061b57600080fd5b505af115801561062f573d6000803e3d6000fd5b5050505061063f87868584610faa565b50505050505050505050565b60405163c23ee3c360e01b815261ffff8216600482015260006024820181905262057e406044830152907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c23ee3c3906064016040805180830381865afa1580156106c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e991906117f8565b5092915050565b60606000805480602002602001604051908101604052809291908181526020016000905b828210156107865760008481526020908190206040805160a08101825260048602909201805461ffff811684526001600160a01b036201000090910481168486015260018083015482169385019390935260028201541660608401526003015460808301529083529092019101610714565b50505050905090565b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038316906323b872dd906064016020604051808303816000875af11580156107e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610806919061181c565b5060405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820185905283169063095ea7b3906044016020604051808303816000875af1158015610876573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089a919061181c565b5060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630f5287b07f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631a90a2196040518163ffffffff1660e01b8152600401602060405180830381865afa15801561092a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094e919061183e565b85878a6001600160a01b038b166000806040518863ffffffff1660e01b815260040161097f96959493929190611857565b60206040518083038185885af115801561099d573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906109c29190611894565b6040516323b872dd60e01b8152336004820152306024820152604481018690529091506001600160a01b038316906323b872dd906064016020604051808303816000875af1158015610a18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3c919061181c565b5060405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820186905283169063095ea7b3906044016020604051808303816000875af1158015610aac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad0919061181c565b5060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630f5287b07f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631a90a2196040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b84919061183e565b85888b6001600160a01b038c166000806040518863ffffffff1660e01b8152600401610bb596959493929190611857565b60206040518083038185885af1158015610bd3573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610bf89190611894565b6040805160028082526060820190925291925060009190816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181610c1457905050905060405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639a8a05926040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd091906118af565b61ffff1681526020016001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681526020018467ffffffffffffffff1681525081600081518110610d2957610d2961147f565b602002602001018190525060405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639a8a05926040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc191906118af565b61ffff1681526020016001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681526020018367ffffffffffffffff1681525081600181518110610e1a57610e1a61147f565b60200260200101819052506000610e308961064b565b604080513360208201529192506000910160408051601f198184030181529082905263329a2be760e01b825291506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063329a2be7908490610ead908e908e90879060009062057e40908c906004016118cc565b60206040518083038185885af1158015610ecb573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610ef09190611894565b508134111561063f57600033610f068434611983565b604051600081818185875af1925050503d8060008114610f42576040519150601f19603f3d011682016040523d82523d6000602084013e610f47565b606091505b5050905080610f9d5760405162461bcd60e51b815260206004820152601d60248201527f52657475726e696e67206578636573732066756e6473206661696c656400000060448201526064015b60405180910390fd5b5050505050505050505050565b60006040518060a001604052808661ffff168152602001856001600160a01b03168152602001610fdd85604001516110ab565b6001600160a01b03168152602001610ff884604001516110ab565b6001600160a01b0316815260200184602001516402540be40061101b919061199c565b9052815460018181018455600093845260209384902083516004909302018054948401516001600160a01b0390811662010000026001600160b01b031990961661ffff90941693909317949094178455604083015190840180549183166001600160a01b031992831617905560608301516002850180549190931691161790556080015160039091015550505050565b600060a082901c156110d35760405163033b960d60e41b815260048101839052602401610f94565b5090565b6000602082840312156110e957600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715611129576111296110f0565b60405290565b604051610160810167ffffffffffffffff81118282101715611129576111296110f0565b604051601f8201601f1916810167ffffffffffffffff8111828210171561117c5761117c6110f0565b604052919050565b600067ffffffffffffffff82111561119e5761119e6110f0565b50601f01601f191660200190565b600082601f8301126111bd57600080fd5b81356111d06111cb82611184565b611153565b8181528460208386010111156111e557600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff82111561121c5761121c6110f0565b5060051b60200190565b61ffff8116811461123657600080fd5b50565b803561124481611226565b919050565b600080600080600060a0868803121561126157600080fd5b853567ffffffffffffffff8082111561127957600080fd5b61128589838a016111ac565b965060209150818801358181111561129c57600080fd5b8801601f81018a136112ad57600080fd5b80356112bb6111cb82611202565b81815260059190911b8201840190848101908c8311156112da57600080fd5b8584015b83811015611312578035868111156112f65760008081fd5b6113048f89838901016111ac565b8452509186019186016112de565b5098505050506040880135945061132e91505060608701611239565b949793965091946080013592915050565b60006020828403121561135157600080fd5b813561135c81611226565b9392505050565b602080825282518282018190526000919060409081850190868401855b828110156113d8578151805161ffff168552868101516001600160a01b039081168887015286820151811687870152606080830151909116908601526080908101519085015260a09093019290850190600101611380565b5091979650505050505050565b6001600160a01b038116811461123657600080fd5b600080600080600060a0868803121561141257600080fd5b853561141d81611226565b9450602086013561142d816113e5565b9350604086013592506060860135611444816113e5565b91506080860135611454816113e5565b809150509295509295909350565b60006020828403121561147457600080fd5b815161135c816113e5565b634e487b7160e01b600052603260045260246000fd5b60005b838110156114b0578181015183820152602001611498565b50506000910152565b600081518084526114d1816020860160208601611495565b601f01601f19169290920160200192915050565b60208152600061135c60208301846114b9565b805160ff8116811461124457600080fd5b805163ffffffff8116811461124457600080fd5b805161124481611226565b805167ffffffffffffffff8116811461124457600080fd5b600082601f83011261155157600080fd5b815161155f6111cb82611184565b81815284602083860101111561157457600080fd5b611585826020830160208701611495565b949350505050565b600082601f83011261159e57600080fd5b815160206115ae6111cb83611202565b82815260079290921b840181019181810190868411156115cd57600080fd5b8286015b8481101561162e57608081890312156115ea5760008081fd5b6115f2611106565b815181528482015185820152604061160b8184016114f8565b90820152606061161c8382016114f8565b908201528352918301916080016115d1565b509695505050505050565b60006020828403121561164b57600080fd5b815167ffffffffffffffff8082111561166357600080fd5b90830190610160828603121561167857600080fd5b61168061112f565b611689836114f8565b815261169760208401611509565b60208201526116a860408401611509565b60408201526116b96060840161151d565b6060820152608083015160808201526116d460a08401611528565b60a08201526116e560c084016114f8565b60c082015260e0830151828111156116fc57600080fd5b61170887828601611540565b60e08301525061010061171c818501611509565b90820152610120838101518381111561173457600080fd5b6117408882870161158d565b91830191909152506101409283015192810192909252509392505050565b600060e0828403121561177057600080fd5b60405160e0810181811067ffffffffffffffff82111715611793576117936110f0565b60405261179f836114f8565b8152602083015160208201526040830151604082015260608301516117c381611226565b60608201526080838101519082015260a08301516117e081611226565b60a082015260c0928301519281019290925250919050565b6000806040838503121561180b57600080fd5b505080516020909101519092909150565b60006020828403121561182e57600080fd5b8151801515811461135c57600080fd5b60006020828403121561185057600080fd5b5051919050565b6001600160a01b03969096168652602086019490945261ffff9290921660408501526060840152608083015263ffffffff1660a082015260c00190565b6000602082840312156118a657600080fd5b61135c82611528565b6000602082840312156118c157600080fd5b815161135c81611226565b600061ffff8089168352602060018060a01b03891681850152604060c0818601526118fa60c086018a6114b9565b60608681018a90526080870189905286820360a088015287518083528489019285019060005b81811015611959578451805189168452878101518885015286015167ffffffffffffffff16868401529386019391830191600101611920565b50909e9d5050505050505050505050505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156119965761199661196d565b92915050565b80820281158282048414176119965761199661196d56fea2646970667358221220b9c923ed0f310c89349ae74906426781fc5edcf4cb949734ab3a186bd523bed364736f6c63430008130033";

type HelloTokensConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HelloTokensConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HelloTokens__factory extends ContractFactory {
  constructor(...args: HelloTokensConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _wormholeRelayer: string,
    _tokenBridge: string,
    _wormhole: string,
    overrides?: Overrides & { from?: string }
  ): Promise<HelloTokens> {
    return super.deploy(
      _wormholeRelayer,
      _tokenBridge,
      _wormhole,
      overrides || {}
    ) as Promise<HelloTokens>;
  }
  override getDeployTransaction(
    _wormholeRelayer: string,
    _tokenBridge: string,
    _wormhole: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _wormholeRelayer,
      _tokenBridge,
      _wormhole,
      overrides || {}
    );
  }
  override attach(address: string): HelloTokens {
    return super.attach(address) as HelloTokens;
  }
  override connect(signer: Signer): HelloTokens__factory {
    return super.connect(signer) as HelloTokens__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelloTokensInterface {
    return new utils.Interface(_abi) as HelloTokensInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HelloTokens {
    return new Contract(address, _abi, signerOrProvider) as HelloTokens;
  }
}
